{"version":3,"file":"static/js/325.af131bd5.chunk.js","mappings":"kNACA,GAAgB,KAAO,uBAAuB,OAAS,yBAAyB,cAAgB,gCAAgC,eAAiB,iCAAiC,MAAQ,wBAAwB,MAAQ,wBAAwB,aAAe,+BAA+B,SAAW,4B,gFCA3S,EAAkC,gCAAlC,EAA0E,sBAA1E,EAAwG,sB,SCqCxG,EA9Be,WACb,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAS1B,OACE,gBAAKC,UAAWC,EAAhB,UACE,mBAAOD,UAAWC,EAAlB,qCACyB,mBACvB,kBACED,UAAWC,EACXC,YAAY,aACZC,SAdS,SAAAC,GACfT,GACEU,EAAAA,EAAAA,IACED,EAAEE,cAAcT,MAAMU,oBAAoBC,QAG/C,EASOC,KAAK,SACLC,KAAK,OACLb,MAAOA,EACPc,aAAa,MACbC,UAAQ,QAKjB,ECzBc,SAASC,IACtB,OACEC,EAAAA,EAAAA,MADKC,GAAP,eAEcC,GAAaC,EAAAA,EAAAA,MAAnBC,KAER,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOV,EAAP,KAAaW,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAAoBH,EAAAA,EAAAA,UAAS,IAA7B,eAAOI,EAAP,KAAWC,EAAX,KAuCMC,EAAQ,WACZL,EAAQ,IACRE,EAAU,IACVE,EAAM,GACP,EAED,OACE,iCACE,eAAIxB,UAAWC,EAAAA,SAAf,8BACA,kBACED,UAAWC,EAAAA,KACXyB,SAhCmB,SAAAtB,GACvBA,EAAEuB,sBAIkBC,IAHAZ,EAASa,MAC3B,SAAAC,GAAO,OAAIA,EAAQrB,OAASA,CAArB,KAGPM,EAAW,CAAEN,KAAAA,EAAMY,OAAAA,EAAQE,GAAAA,IAC3BQ,EAAAA,GAAAA,QAAA,kBAAyBtB,EAAzB,mBAAgD,CAC9CuB,SAAUD,EAAAA,GAAAA,SAAAA,WACVE,UAAW,OAGbF,EAAAA,GAAAA,MAAA,UAAetB,EAAf,kBAAqC,CACnCuB,SAAUD,EAAAA,GAAAA,SAAAA,WACVE,UAAW,MAIfR,GACD,EAWG,WAIE,iBAAKzB,UAAWC,EAAAA,cAAhB,WACE,iBAAKD,UAAWC,EAAAA,aAAhB,WACE,kBAAOD,UAAWC,EAAAA,MAAlB,oBACA,kBACED,UAAWC,EAAAA,MACXC,YAAY,aACZC,SAxDc,SAAAC,GACxB,MAAwBA,EAAEE,cAAlBG,EAAR,EAAQA,KAAMZ,EAAd,EAAcA,MACd,OAAQY,GACN,IAAK,OACHW,EAAQvB,GAER,MACF,IAAK,SACHyB,EAAUzB,GACV,MACF,QACE,OAEJ2B,GAAMU,EAAAA,EAAAA,MACP,EA2CWxB,KAAK,OACLD,KAAK,OACLZ,MAAOY,EACP0B,QAAQ,yKACRvB,UAAQ,QAGZ,iBAAKZ,UAAWC,EAAAA,eAAhB,WACE,kBAAOD,UAAWC,EAAAA,MAAlB,sBACA,SAAC,KAAD,CACED,UAAWC,EAAAA,WACXmC,eAAe,KACfjC,SAAU,SAAAkB,GACRC,EAAUD,EACX,EACDgB,OAAO,SACPC,MAAM,SACN5B,KAAK,MACLD,KAAK,SACLZ,MAAOwB,EACPnB,YAAY,qBACZS,aAAa,MACb4B,eAAa,EACbC,UAAU,cAIhB,oBAAQ9B,KAAK,SAASV,UAAWC,EAAAA,OAAjC,kBACM,kBADN,sBAKY2B,IAAbZ,GACCA,EAASyB,OAAS,IAAM,SAAC,EAAD,MAG/B,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/HomePage/HomePage.module.css?b0f5","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"HomePage_form__MklZ6\",\"addBtn\":\"HomePage_addBtn__xOPDK\",\"formContainer\":\"HomePage_formContainer__EzIqz\",\"phoneContainer\":\"HomePage_phoneContainer__StE9h\",\"label\":\"HomePage_label__rDFx8\",\"input\":\"HomePage_input__+jj6a\",\"inputPadding\":\"HomePage_inputPadding__cvF7b\",\"subtitle\":\"HomePage_subtitle__Pm8p2\"};","// extracted by mini-css-extract-plugin\nexport default {\"filterContainer\":\"Filter_filterContainer__8G57N\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  filter,\n  getContactFilter,\n} from 'redux/contactsSlice';\nimport styles from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(getContactFilter);\n\n  const onChange = e => {\n    dispatch(\n      filter(\n        e.currentTarget.value.toLocaleLowerCase().trim()\n      )\n    );\n  };\n  return (\n    <div className={styles.filterContainer}>\n      <label className={styles.label}>\n        Find contacts by name: <br />\n        <input\n          className={styles.input}\n          placeholder=\"Enter name\"\n          onChange={onChange}\n          name=\"filter\"\n          type=\"text\"\n          value={value}\n          autoComplete=\"off\"\n          required\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;","import { useState } from 'react';\nimport styles from './HomePage.module.css';\nimport { nanoid } from 'nanoid';\nimport PhoneInput from 'react-phone-number-input';\nimport 'react-phone-number-input/style.css';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useAddContactMutation } from 'redux/contactsApi';\nimport { useFetchContactsQuery } from 'redux/contactsApi';\nimport Filter from 'components/Filter/Filter';\n\nexport default function Form() {\n  const [addContact] =\n    useAddContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [id, setId] = useState('');\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n    setId(nanoid());\n  };\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    const isDuplicate = contacts.find(\n      contact => contact.name === name\n    );\n    if (isDuplicate === undefined) {\n      addContact({ name, number, id });\n      toast.success(`Contact ${name} has been added`, {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 1000,\n      });\n    } else {\n      toast.error(`${name} already exist`, {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 1000,\n      });\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n    setId('');\n  };\n\n  return (\n    <>\n      <h2 className={styles.subtitle}>Add new contact</h2>\n      <form\n        className={styles.form}\n        onSubmit={handleSubmitForm}\n      >\n        <div className={styles.formContainer}>\n          <div className={styles.inputPadding}>\n            <label className={styles.label}>Name:</label>\n            <input\n              className={styles.input}\n              placeholder=\"Enter name\"\n              onChange={handleInputChange}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[A-Za-zА-Яа-яЁёІіЇїЄє]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              required\n            />\n          </div>\n          <div className={styles.phoneContainer}>\n            <label className={styles.label}>Number:</label>\n            <PhoneInput\n              className={styles.inputPhone}\n              defaultCountry=\"UA\"\n              onChange={number => {\n                setNumber(number);\n              }}\n              region=\"Europe\"\n              title=\"Number\"\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              placeholder=\"Enter phone number\"\n              autoComplete=\"off\"\n              international\n              maxLength=\"16\"\n            />\n          </div>\n        </div>\n        <button type=\"submit\" className={styles.addBtn}>\n          Add <br /> Contact\n        </button>\n      </form>\n\n      {contacts !== undefined &&\n        contacts.length > 0  && <Filter />}\n    </>\n  );\n}\n"],"names":["dispatch","useDispatch","value","useSelector","getContactFilter","className","styles","placeholder","onChange","e","filter","currentTarget","toLocaleLowerCase","trim","name","type","autoComplete","required","Form","useAddContactMutation","addContact","contacts","useFetchContactsQuery","data","useState","setName","number","setNumber","id","setId","reset","onSubmit","preventDefault","undefined","find","contact","toast","position","autoClose","nanoid","pattern","defaultCountry","region","title","international","maxLength","length"],"sourceRoot":""}